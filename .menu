local basalt = require("basalt")
--os.pullEvent = os.pullEventRaw 
local w,h = term.getSize()


function getAntID()
    antPosX = 2600
    antPosZ = 2600
    peripheral.find("modem", rednet.open)
    rednet.send(558, "$getAntID")
    antID, antName = rednet.receive(2)
    if antName ~= nil then
    antID, antPosX = rednet.receive(2)
    antID, antPosY = rednet.receive(2)
    antID, antPosZ = rednet.receive(2)
    rednet.close()
    else
    antName = "No signal"
    rednet.close()
    end
end
function getAntPos()
    antennaPos = vector.new(antPosX, antPosY, antPosZ)
    position = vector.new(gps.locate(2))
    displacement = position - antennaPos
    blocksAway = displacement.x + displacement.z
    if blocksAway < 0 then
        blocksAway = math.abs(blocksAway)
    end
end

getAntID()
getAntPos()  
--GUI

local main = basalt.createFrame()
local timer = main:addTimer()
local button1 = main
        :addButton()
        :setPosition(2, 18)
        :setText(">_")
        :setSize(4, 3)
        :setBackground(colors.black)
        :setForeground(colors.green)
        :onClick(
            function()
                basalt.stopUpdate()
                shell.run("os/.command")
        end)

local listApps = main:addFrame("appsFrame")
    listApps:hide()
    :setSize(12,9)
    :setPosition(8, 5)
    listApps:addButton()
    :setText("Close")
    :setPosition(1, 1)
    :onClick(
        function()
            listApps:hide()
        end)
        :setBorder(colors.green, "left", "right", "bottom", "top")
    listApps:addButton()
    :setPosition(1, 4)
    :setText("Chat")
    :onClick(
        function()
            basalt.stopUpdate()
            shell.run("programs/chat.lua")
        end)
        :setBorder(colors.green, "left", "right", "bottom", "top")
    listApps:addButton()
        :setPosition(1, 7)
        :setText("FTP")
        :onClick(
            function()
                basalt.stopUpdate()
                shell.run("programs/ftpcli.lua")
            end)
            :setBorder(colors.green, "left", "right", "bottom", "top")
local button2 = main
    :addButton()
    :setPosition(10, 18)
    :setText("APPs")
    :setSize(6, 3)
    :onClick(
        function()
            listApps:show()
        end)
local button3 = main
    :addButton()
    :setPosition(19, 18)
    :setText("Power")
    :setBackground(colors.red)
    :setForeground(colors.white)
    :setSize(7, 3)
    :onClick(
        function()
            basalt.stopUpdate()
            shell.run("os/.power")
        end)
local hoursLabel = main
    :addLabel()
    :setPosition(1, 1)
    :setText(formattedTime)

local signalLabel = main
    :addLabel()
    :setPosition(24, 1)



function checkBlocksAway()
    if blocksAway >= 0 and blocksAway <= 44 then
        signalLabel:setText("###")
    elseif blocksAway >= 45 and blocksAway <= 119 then
        signalLabel:setText("##-")
    elseif blocksAway >= 120 and blocksAway <= 159 then
        signalLabel:setText("#--")
    elseif blocksAway >= 160 then
        signalLabel:setText("---")
    end
end

function updateSignal()
    while true do
        getAntPos()
        checkBlocksAway()
        local time = os.time()
local formattedTime = textutils.formatTime(time, false)
        hoursLabel:setText(formattedTime)
        os.sleep(1)
    end
end

parallel.waitForAny(basalt.autoUpdate, updateSignal)

